{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","categories","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","replace","fetch","response","json","data","gifs","map","gif","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","img","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAiCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SAbW,SAAUC,GAC3BA,EAAEC,iBACwB,KAAtBJ,EAAWK,SACXP,GAAc,SAAAQ,GAAU,OAAKN,GAAL,mBAAoBM,OAC5CL,EAAc,MASlB,SACI,uBACIM,MAAOP,EACPQ,SARc,SAAUL,GAC5BF,EAAcE,EAAEM,OAAOF,a,QCLpBG,EATK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC1B,OACI,sBAAKC,UAAU,+CAAf,UACI,4BAAIF,IACJ,qBAAKG,IAAKF,EAAKG,IAAKJ,Q,uBCJnBK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEwDK,EAJ/BE,QAAQ,MAAO,KAExC,+DAGIC,MAAMR,GAHV,cAGbS,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAKc,EAAIE,OAAOC,iBAAiBjB,QAVtB,kBAaZY,GAbY,4CAAH,sDCqBLM,EAnBC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAEf,ECHwB,SAACA,GAEzB,MAA0BlB,mBAAS,CAC/BwB,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACNlB,EAAQC,GAAUkB,MAAK,SAACC,GACpBC,YAAW,WACPJ,EAAS,CACLV,KAAMa,EACNL,SAAS,MAEd,UAER,CAACd,IAEGe,EDf2BM,CAAarB,GAAjCW,EAAd,EAAQL,KAAcQ,EAAtB,EAAsBA,QAEtB,OACI,qCACI,oBAAIlB,UAAU,oCAAd,SAAmDI,IAClDc,GAAW,mBAAGlB,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SACKe,EAAOH,KAAI,SAACc,GACT,OACI,cAAC,EAAD,eAA8BA,GAAZA,EAAIZ,aEG/Ba,EAdM,WAEjB,MAAoCzC,mBAAS,CAAC,kBAA9C,mBAAOO,EAAP,KAAmBR,EAAnB,KAEA,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACKQ,EAAWmB,KAAI,SAACR,GAAD,OAAe,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,U,MCRzDwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.28337ac7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleSubmit = function (e) {\r\n        e.preventDefault();\r\n        if (inputValue.trim() !== '') {\r\n            setCategories(categories => [inputValue, ...categories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    const handleInputChange = function (e) {\r\n            setInputValue(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory;\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__jackInTheBox\">\r\n            <p>{title}</p>\r\n            <img src={url} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","const returnStringwithPlus = (string) => string.replace(/\\s/g, '+');\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${returnStringwithPlus(category)}&limit=10&api_key=wdWacmMjrRbeecYtuiEnvd2wTPdJCEQQ`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n    const gifs = data.map((gif) => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react';\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n            <div className=\"card-grid\">\r\n                {images.map((img) => {\r\n                    return (\r\n                        <GifGridItem key={img.id} {...img} />\r\n                    );\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then((imgs) => {\r\n            setTimeout(() => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            }, 1000);\r\n        });\r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch Man']);\r\n\r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2> \r\n        <AddCategory setCategories={setCategories} />\r\n        <hr />\r\n            {categories.map((category) => (<GifGrid key={category} category={category} />))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}